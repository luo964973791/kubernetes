apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-web-pvc
  namespace: nginx
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
  namespace: nginx
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image:  nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "32Mi"
          limits:
            cpu: "200m"
            memory: "64Mi"
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
          subPath: html
      volumes:
      - name: www
        persistentVolumeClaim:
          claimName: nginx-web-pvc
#反亲和.
#      affinity:
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#          - topologyKey: kubernetes.io/hostname
#            labelSelector:
#              matchExpressions: 
#              - key: kubernetes.io/os
#                operator: In 
#                values: 
#                - linux

#亲和.
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "node2"
                - "node3"
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: nginx
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: nginx
  type: LoadBalancer